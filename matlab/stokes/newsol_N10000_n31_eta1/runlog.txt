Using RBF Support Parameter ep=3.400000
Calculating weights (N=10000, n=31, ep=3.400000, hv_k=4, hv_gamma=8.000000e+02)
Dimension not specified, assuming maximum allowed by nodes: 3
Elapsed time is 5.795837 seconds.
Filling LHS Collocation Matrix
Allocate LHS
Fill COL 1
Fill COL 2
Fill COL 3
Fill COL 4
Fill EXTRA CONSTRAINTS
Construct Sparse From Tuples
Over-Allocation for LHS (2870000 expected - 2869938 actual elements): -2.38 KB
Sample DIV Operator
Elapsed time is 1.232103 seconds.
Printing figure: ./newsol_N10000_n31_eta1/LHS
Printing figure: ./newsol_N10000_n31_eta1/LHS
Filling RHS Vector


--> Checking Relative Error of RHS: 
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_rel_err_l1 =
   Inf
RHS_P_rel_err_l2 =
   Inf
RHS_P_rel_err_linf =
   Inf
Elapsed Time: 6.217224
Printing figure: ./newsol_N10000_n31_eta1/RHS
Printing figure: ./newsol_N10000_n31_eta1/RHS_discrete
Printing figure: ./newsol_N10000_n31_eta1/RHS_AbsError
Printing figure: ./newsol_N10000_n31_eta1/U_exact
[RC, RD, UC] = fillRHS(node, LHS, constantViscosity, eta, 0)
{??? Undefined function or variable 'node'.
} 
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0)
{??? Operation terminated by user during ==> <a href="matlab: opentoline('/Users/efb06/rbffd_prototypes/matlab/stokes/fillRHS.m',84,0)">fillRHS at 84</a>
} 
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   17.5833
RHS_P_abs_err_l2 =
    0.2846
RHS_P_abs_err_linf =
    0.0330
{??? Undefined function or variable 'rhs_u'.
} 
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_W_abs_err_l1 =
   NaN
RHS_W_abs_err_l2 =
   NaN
RHS_W_abs_err_linf =
   NaN
RHS_P_abs_err_l1 =
   17.5833
RHS_P_abs_err_l2 =
    0.2846
RHS_P_abs_err_linf =
    0.0330
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_abs_err_l1 =
   NaN
RHS_W_abs_err_l2 =
   NaN
RHS_W_abs_err_linf =
   NaN
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   17.5833
RHS_P_abs_err_l2 =
    0.2846
RHS_P_abs_err_linf =
    0.0330
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_abs_err_l1 =
   NaN
RHS_W_abs_err_l2 =
   NaN
RHS_W_abs_err_linf =
   NaN
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   17.5833
RHS_P_abs_err_l2 =
    0.2846
RHS_P_abs_err_linf =
    0.0330
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
ans =
       10000           1
ans =
   7.7420e+03
RHS_W_abs_err_l1 =
   NaN
RHS_W_abs_err_l2 =
   NaN
RHS_W_abs_err_linf =
   NaN
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   17.5833
RHS_P_abs_err_l2 =
    0.2846
RHS_P_abs_err_linf =
    0.0330
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
ans =
       10000           1
ans =
   NaN
RHS_W_abs_err_l1 =
   NaN
RHS_W_abs_err_l2 =
   NaN
RHS_W_abs_err_linf =
   NaN
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   17.5833
RHS_P_abs_err_l2 =
    0.2846
RHS_P_abs_err_linf =
    0.0330
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
ans =
       10000           1
ans =
  -7.7214e+03
RHS_W_abs_err_l1 =
   NaN
RHS_W_abs_err_l2 =
   NaN
RHS_W_abs_err_linf =
   NaN
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   17.5833
RHS_P_abs_err_l2 =
    0.2846
RHS_P_abs_err_linf =
    0.0330
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
help norm
 NORM   Matrix or vector norm.
      NORM(X,2) returns the 2-norm of X.
 
      NORM(X) is the same as NORM(X,2).
 
      NORM(X,1) returns the 1-norm of X.
 
      NORM(X,Inf) returns the infinity norm of X.
 
      NORM(X,'fro') returns the Frobenius norm of X.
 
    In addition, for vectors...
 
      NORM(V,P) returns the p-norm of V defined as SUM(ABS(V).^P)^(1/P).
 
      NORM(V,Inf) returns the largest element of ABS(V).
 
      NORM(V,-Inf) returns the smallest element of ABS(V).
 
    By convention, NaN is returned if X or V contains NaNs.
 
    See also <a href="matlab:help cond">cond</a>, <a href="matlab:help rcond">rcond</a>, <a href="matlab:help condest">condest</a>, <a href="matlab:help normest">normest</a>, <a href="matlab:help hypot">hypot</a>.

    Overloaded methods:
       <a href="matlab:help codistributed/norm">codistributed/norm</a>
       <a href="matlab:help mfilt.norm">mfilt.norm</a>
       <a href="matlab:help adaptfilt.norm">adaptfilt.norm</a>
       <a href="matlab:help dfilt.norm">dfilt.norm</a>

    Reference page in Help browser
       <a href="matlab:doc norm">doc norm</a>

[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
ans =
    7.8293
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
000
ans =
     0
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
ans =
    7.8293
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
ans =
   7.7420e+03
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
ans =
   NaN
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
ans =
   NaN
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
ans =
   NaN
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
s =
   NaN
ans =
   NaN
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
help sum
 SUM Sum of elements.
    S = SUM(X) is the sum of the elements of the vector X. If
    X is a matrix, S is a row vector with the sum over each
    column. For N-D arrays, SUM(X) operates along the first
    non-singleton dimension.
    If X is floating point, that is double or single, S is
    accumulated natively, that is in the same class as X,
    and S has the same class as X. If X is not floating point,
    S is accumulated in double and S has class double.
 
    S = SUM(X,DIM) sums along the dimension DIM. 
 
    S = SUM(X,'double') and S = SUM(X,DIM,'double') accumulate
    S in double and S has class double, even if X is single.
 
    S = SUM(X,'native') and S = SUM(X,DIM,'native') accumulate
    S natively and S has the same class as X.
 
    Examples:
    If   X = [0 1 2
              3 4 5]
 
    then sum(X,1) is [3 5 7] and sum(X,2) is [ 3
                                              12];
 
    If X = int8(1:20) then sum(X) accumulates in double and the
    result is double(210) while sum(X,'native') accumulates in
    int8, but overflows and saturates to int8(127).
 
    See also <a href="matlab:help prod">prod</a>, <a href="matlab:help cumsum">cumsum</a>, <a href="matlab:help diff">diff</a>, <a href="matlab:help accumarray">accumarray</a>, <a href="matlab:help isfloat">isfloat</a>.

    Overloaded methods:
       <a href="matlab:help timeseries/sum">timeseries/sum</a>
       <a href="matlab:help codistributed/sum">codistributed/sum</a>

    Reference page in Help browser
       <a href="matlab:doc sum">doc sum</a>

help sum
 SUM Sum of elements.
    S = SUM(X) is the sum of the elements of the vector X. If
    X is a matrix, S is a row vector with the sum over each
    column. For N-D arrays, SUM(X) operates along the first
    non-singleton dimension.
    If X is floating point, that is double or single, S is
    accumulated natively, that is in the same class as X,
    and S has the same class as X. If X is not floating point,
    S is accumulated in double and S has class double.
 
    S = SUM(X,DIM) sums along the dimension DIM. 
 
    S = SUM(X,'double') and S = SUM(X,DIM,'double') accumulate
    S in double and S has class double, even if X is single.
 
    S = SUM(X,'native') and S = SUM(X,DIM,'native') accumulate
    S natively and S has the same class as X.
 
    Examples:
    If   X = [0 1 2
              3 4 5]
 
    then sum(X,1) is [3 5 7] and sum(X,2) is [ 3
                                              12];
 
    If X = int8(1:20) then sum(X) accumulates in double and the
    result is double(210) while sum(X,'native') accumulates in
    int8, but overflows and saturates to int8(127).
 
    See also <a href="matlab:help prod">prod</a>, <a href="matlab:help cumsum">cumsum</a>, <a href="matlab:help diff">diff</a>, <a href="matlab:help accumarray">accumarray</a>, <a href="matlab:help isfloat">isfloat</a>.

    Overloaded methods:
       <a href="matlab:help timeseries/sum">timeseries/sum</a>
       <a href="matlab:help codistributed/sum">codistributed/sum</a>

    Reference page in Help browser
       <a href="matlab:doc sum">doc sum</a>

[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
s =
   NaN
s =
   NaN
ans =
   NaN
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   2.4576e-05
RHS_U_rel_err_linf =
   1.1683e-04
RHS_V_rel_err_l1 =
   1.9589e-05
RHS_V_rel_err_l2 =
   2.5152e-05
RHS_V_rel_err_linf =
   1.6798e-04
RHS_W_rel_err_l1 =
   NaN
RHS_W_rel_err_l2 =
   NaN
RHS_W_rel_err_linf =
   NaN
RHS_P_abs_err_l1 =
   Inf
RHS_P_abs_err_l2 =
   Inf
RHS_P_abs_err_linf =
   Inf
[RC, RD, UC] = fillRHS(nodes, LHS, constantViscosity, eta, 0);


--> Checking Relative Error of RHS: 
Global_RHS_Rel_Error_1 =
   NaN
Global_RHS_Rel_Error_2 =
   NaN
Global_RHS_Rel_Error_inf =
   NaN
s =
  -5.5669e+03
s =
   NaN
ans =
   NaN
RHS_U_rel_err_l1 =
   1.9389e-05
RHS_U_rel_err_l2 =
   